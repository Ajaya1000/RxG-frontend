{"version":3,"sources":["pages/home.page.jsx","component/game.component.jsx","component/lobby.component.jsx","pages/entry.page.jsx","routes.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["useStyles","makeStyles","root","width","height","display","flexDirection","justifyContent","alignItems","paper","maxWidth","padding","item","inputGroup","inputGroupCentered","label","button","Home","classes","useState","userName","setUserName","existingRoomCode","setExistingRoomCode","newRoomCode","setNewRoomCode","level","setLevel","history","useHistory","Container","className","Paper","Grid","container","spacing","xs","component","Typography","TextField","variant","value","onChange","e","target","md","Button","color","onClick","console","log","push","type","username","room","RadioGroup","parseInt","FormControlLabel","control","Radio","useStyle","card","cursor","margin","selectedCard","boxShadow","greenCard","backgroundColor","gridContainer","marginTop","cardContainer","flexWrap","maxHeight","paperTextWhite","fontSize","fontWeight","paperTextBlack","selectedRadioButton","borderRadius","unSelectedRadioButton","radioButtonText","bottomContainer","leaveButtonGrid","Alert","props","elevation","RevealCard","isSelected","CustomRadioButtons","dataList","map","index","Game","socket","roomCode","requestLeaveGame","currentUser","setCurrentUser","setSelectedCard","setValue","openToast","setOpenToast","errorText","setErrorText","severity","setSeverity","useEffect","on","data","length","result","off","Snackbar","open","autoHideDuration","onClose","anchorOrigin","horizontal","vertical","style","textAlign","remainingMove","answer","val","emit","content","activeStatusIcon","marginRight","inActiveStatusIcon","userContainer","userItem","StatusIcon","status","Leaderboard","user","marginLeft","bestReveal","bestMove","Lobby","requestLeave","setRoom","code","sm","users","name","fontStyle","socketId","isAdmin","leaderboardGrid","leaderboard","Entry","isGameStarted","setGameStarted","useRef","socketIOClient","current","historyState","location","state","error","disconnect","Routes","exact","path","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAeMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAEhBC,MAAO,CACHN,MAAO,MACPO,SAAU,KACVC,QAAS,IAEbC,KAAM,CACFD,QAAS,GACTN,QAAS,OACTC,cAAe,SACfC,eAAgB,QAChBC,WAAY,SAEhBK,WAAY,CACRV,MAAO,OACPE,QAAS,OACTC,cAAe,MACfC,eAAgB,QAChBC,WAAY,UAEhBM,mBAAoB,CAChBX,MAAO,OACPE,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAEhBO,MAAO,CACHJ,QAAS,UAEbK,OAAQ,CACJb,MAAO,OACPE,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBI,QAAS,eAqIFM,EAjIF,WACT,IAAMC,EAAUlB,IADD,EAGiBmB,mBAAS,IAH1B,mBAGRC,EAHQ,KAGEC,EAHF,OAIiCF,mBAAS,IAJ1C,mBAIRG,EAJQ,KAIUC,EAJV,OAKuBJ,mBAAS,IALhC,mBAKRK,EALQ,KAKKC,EALL,OAMWN,mBAAS,GANpB,mBAMRO,EANQ,KAMDC,EANC,KAQTC,EAAUC,cAwBhB,OACI,cAACC,EAAA,EAAD,CAAWC,UAAWb,EAAQhB,KAA9B,SACI,cAAC8B,EAAA,EAAD,CAAOD,UAAWb,EAAQT,MAA1B,SACI,eAACwB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMF,UAAWb,EAAQN,KAAMA,MAAI,EAACwB,GAAI,GAAxC,SACI,sBACIL,UAAWb,EAAQJ,mBACnBuB,UAAU,MAFd,UAII,cAACC,EAAA,EAAD,CAAYP,UAAWb,EAAQH,MAA/B,yBAGA,cAACwB,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAOtB,EAAYsB,EAAEC,OAAOH,eAKlD,eAACR,EAAA,EAAD,CAAMF,UAAWb,EAAQN,KAAMA,MAAI,EAACwB,GAAI,GAAIS,GAAI,EAAhD,UACI,sBAAKd,UAAWb,EAAQL,WAAYwB,UAAU,MAA9C,UACI,cAACC,EAAA,EAAD,CAAYP,UAAWb,EAAQH,MAA/B,kCAGA,cAACwB,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OACNpB,EAAoBoB,EAAEC,OAAOH,aAIzC,qBAAKV,UAAWb,EAAQF,OAAxB,SACI,cAAC8B,EAAA,EAAD,CACIN,QAAQ,YACRO,MAAM,UACNC,QAAS,kBA1DjCC,QAAQC,IAAI9B,GACZ6B,QAAQC,IAAI5B,QAEZM,EAAQuB,KAAK,SAAU,CACnBC,KAAM,OACNC,SAAUjC,EACVkC,KAAMhC,KAiDU,uBASR,eAACW,EAAA,EAAD,CAAMF,UAAWb,EAAQN,KAAMA,MAAI,EAACwB,GAAI,GAAIS,GAAI,EAAhD,UACI,sBAAKd,UAAWb,EAAQL,WAAYwB,UAAU,MAA9C,UACI,cAACC,EAAA,EAAD,CAAYP,UAAWb,EAAQH,MAA/B,6BAGA,cAACwB,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAOlB,EAAekB,EAAEC,OAAOH,aAGjD,sBAAKV,UAAWb,EAAQL,WAAYwB,UAAU,MAA9C,UACI,cAACC,EAAA,EAAD,CAAYP,UAAWb,EAAQH,MAA/B,qBAGA,eAACwC,EAAA,EAAD,CACId,MAAOf,EACPgB,SAAU,SAACC,GAAD,OACNhB,EAAS6B,SAASb,EAAEC,OAAOH,MAAO,MAH1C,UAMI,cAACgB,EAAA,EAAD,CACIhB,MAAO,EACPiB,QAAS,cAACC,EAAA,EAAD,IACT5C,MAAM,SAEV,cAAC0C,EAAA,EAAD,CACIhB,MAAO,EACPiB,QAAS,cAACC,EAAA,EAAD,IACT5C,MAAM,WAEV,cAAC0C,EAAA,EAAD,CACIhB,MAAO,EACPiB,QAAS,cAACC,EAAA,EAAD,IACT5C,MAAM,eAIlB,qBAAKgB,UAAWb,EAAQF,OAAxB,SACI,cAAC8B,EAAA,EAAD,CACIN,QAAQ,YACRO,MAAM,UACNC,QAAS,kBAhGjCC,QAAQC,IAAI9B,GACZ6B,QAAQC,IAAI1B,GACZyB,QAAQC,IAAIxB,QACZE,EAAQuB,KAAK,SAAU,CACnBC,KAAM,SACNC,SAAUjC,EACVkC,KAAM9B,EACNE,WAsFgB,iC,2CCjKtBkC,EAAW3D,YAAW,CACxBC,KAAM,CACFC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAEhBqD,KAAM,CACF1D,MAAO,IACPC,OAAQ,IACR0D,OAAQ,UACRzD,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZuD,OAAQ,IAEZC,aAAc,CACV7D,MAAO,IACPC,OAAQ,IACR0D,OAAQ,UACRG,UAAW,0CACX5D,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZuD,OAAQ,IAEZG,UAAW,CACP/D,MAAO,IACPC,OAAQ,IACR0D,OAAQ,UACRK,gBAAiB,UACjB9D,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZuD,OAAQ,IAEZK,cAAe,CACXjE,MAAO,OACPC,OAAQ,MACRiE,UAAW,MAEfC,cAAe,CACXjE,QAAS,OACTC,cAAe,MACfiE,SAAU,OACVhE,eAAgB,eAChBC,WAAY,UAEhBC,MAAO,CACHN,MAAO,OACPC,OAAQ,OACRM,SAAU,IACV8D,UAAW,KAEfC,eAAgB,CACZ1B,MAAO,OACP2B,SAAU,GACVC,WAAY,KAEhBC,eAAgB,CACZ7B,MAAO,OACP2B,SAAU,GACVC,WAAY,KAEhBE,oBAAqB,CACjBV,gBAAiB,UACjBJ,OAAQ,EACRe,aAAc,EACdb,UAAW,uCACX,UAAW,CACPE,gBAAiB,YAGzBY,sBAAuB,CACnBZ,gBAAiB,UACjBJ,OAAQ,EACRe,aAAc,EACd,UAAW,CACPX,gBAAiB,YAGzBa,gBAAiB,CACbjC,MAAO,QAEXkC,gBAAiB,CACbZ,UAAW,IAEfa,gBAAiB,CACb7E,QAAS,OACTE,eAAgB,SAChBC,WAAY,YAId2E,EAAQ,SAACC,GAAD,OAAW,cAAC,IAAD,aAAUC,UAAW,EAAG7C,QAAQ,UAAa4C,KAEhEE,EAAa,SAAC,GAAoC,IAAlC7C,EAAiC,EAAjCA,MAAOO,EAA0B,EAA1BA,QAASuC,EAAiB,EAAjBA,WAC5BrE,EAAU0C,IAEhB,OACI,cAAC5B,EAAA,EAAD,CACID,UAEc,MAAVU,EACMvB,EAAQgD,UACRqB,EACArE,EAAQ8C,aACR9C,EAAQ2C,KAElBb,QAASA,EATb,SAWI,cAACV,EAAA,EAAD,CACIP,UACc,MAAVU,EACMvB,EAAQuD,eACRvD,EAAQ0D,eAJtB,SAOKnC,OAMX+C,EAAqB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUhD,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrCxB,EAAU0C,IAEhB,OACI,qCACK6B,QADL,IACKA,OADL,EACKA,EAAUC,KAAI,SAAC9E,EAAM+E,GAAP,OACX,cAAC7C,EAAA,EAAD,CACIf,UACI4D,EAAQ,IAAMlD,EACRvB,EAAQ2D,oBACR3D,EAAQ6D,sBAElB/B,QAAS,kBAAMN,EAASiD,EAAQ,IANpC,SAQI,cAACrD,EAAA,EAAD,CAAYP,UAAWb,EAAQ8D,gBAA/B,SACKW,EAAQ,YAgIlBC,EAxHF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAAuB,EACf5E,qBADe,mBAC9C6E,EAD8C,KACjCC,EADiC,OAEb9E,mBAAS,GAFI,mBAE9C6C,EAF8C,KAEhCkC,EAFgC,OAG3B/E,mBAAS,GAHkB,mBAG9CsB,EAH8C,KAGvC0D,EAHuC,OAInBhF,oBAAS,GAJU,mBAI9CiF,EAJ8C,KAInCC,EAJmC,OAMnBlF,mBAAS,IANU,mBAM9CmF,EAN8C,KAMnCC,EANmC,OAOrBpF,mBAAS,SAPY,mBAO9CqF,EAP8C,KAOpCC,EAPoC,KASrDC,qBAAU,WAwBN,OAvBAb,EAAOc,GAAG,eAAe,SAACC,GACtB3D,QAAQC,IAAI,eAAgB0D,GAC5BX,EAAeW,GACXA,EAAK1D,IAAI2D,OAAS,IAC2B,IAAzCD,EAAK1D,IAAI0D,EAAK1D,IAAI2D,OAAS,GAAGC,QAC9BP,EAAa,4BACbE,EAAY,aAEZF,EAAa,eAAD,OAEJK,EAAK1D,IAAI0D,EAAK1D,IAAI2D,OAAS,GAAGpE,MAF1B,kBAIqC,IAAzCmE,EAAK1D,IAAI0D,EAAK1D,IAAI2D,OAAS,GAAGC,OACxB,QACA,OANF,yBASZL,EAAY,UAEhBJ,GAAa,OAId,WACHR,EAAOkB,IAAI,kBAEhB,IAEH,IAAM7F,EAAU0C,IAWhB,OACI,eAAC9B,EAAA,EAAD,CAAWC,UAAWb,EAAQhB,KAA9B,UACI,cAAC8G,EAAA,EAAD,CACIC,KAAMb,EACNc,iBAAkB,IAClBC,QAAS,kBAAMd,GAAa,IAC5Be,aAAc,CAAEC,WAAY,SAAUC,SAAU,OAJpD,SAMI,cAAC,EAAD,CAAOH,QAAS,kBAAMd,GAAa,IAAQG,SAAUA,EAArD,SACKF,MAGT,eAACrE,EAAA,EAAD,CAAMC,WAAS,EAACH,UAAWb,EAAQkD,cAAnC,UACI,cAACnC,EAAA,EAAD,CAAMrB,MAAI,EAACwB,GAAI,GAAf,SACI,eAACE,EAAA,EAAD,CAAYiF,MAAO,CAAEC,UAAW,OAAhC,qCACsBxB,QADtB,IACsBA,OADtB,EACsBA,EAAayB,mBAGvC,cAACxF,EAAA,EAAD,CAAMrB,MAAI,EAACwB,GAAI,GAAIL,UAAWb,EAAQoD,cAAtC,gBACK0B,QADL,IACKA,OADL,EACKA,EAAa0B,OAAOhC,KAAI,SAAC9E,EAAM+E,GAAP,OACrB,cAAC,EAAD,CAGIlD,MAAO7B,EACPoC,QAAS,kBAAMkD,EAAgBP,IAC/BJ,WAAYI,IAAU3B,GAHjB2B,QAOjB,eAAC1D,EAAA,EAAD,CACIC,WAAS,EACTtB,MAAI,EACJwB,GAAI,GACJL,UAAWb,EAAQ+D,gBAJvB,UAMI,cAAChD,EAAA,EAAD,CAAMrB,MAAI,EAACwB,GAAI,GAAIS,GAAI,EAAvB,SACI,eAACP,EAAA,EAAD,wCAC+B0B,EAAe,OAGlD,cAAC/B,EAAA,EAAD,CAAMrB,MAAI,EAACwB,GAAI,GAAIS,GAAI,EAAvB,SACI,cAAC,EAAD,CACI4C,SAAQ,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAa0B,OACvBjF,MAAOA,EACPC,SAAU,SAACiF,GAAD,OAASxB,EAASwB,QAGpC,cAAC1F,EAAA,EAAD,CAAMrB,MAAI,EAACwB,GAAI,GAAIS,GAAI,EAAvB,SACI,cAACC,EAAA,EAAD,CACIN,QAAQ,YACRO,MAAM,UACNC,QAAS,WAtD7B6C,EAAO+B,KAAK,OAAQ,CAAEtE,KAAMwC,EAAUH,MAAO3B,EAAcvB,WAmD3C,wBASR,cAACR,EAAA,EAAD,CAAMrB,MAAI,EAACwB,GAAI,GAAIL,UAAWb,EAAQgE,gBAAtC,SACI,cAACpC,EAAA,EAAD,CACIN,QAAQ,YACRO,MAAM,YACNC,QAAS,kBAAM+C,KAHnB,4BCtQdnC,EAAW3D,YAAW,CACxBC,KAAM,CACFC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAEhBqH,QAAS,CACL1H,MAAO,MACPC,OAAQ,OAEZ0H,iBAAkB,CACd3H,MAAO,GACPC,OAAQ,GACR0E,aAAc,MACdX,gBAAiB,QACjB4D,YAAa,IAEjBC,mBAAoB,CAChB7H,MAAO,GACPC,OAAQ,GACR0E,aAAc,MACdX,gBAAiB,MACjB4D,YAAa,IAEjBE,cAAe,GACfC,SAAU,CACN7H,QAAS,OACTC,cAAe,MACfC,eAAgB,UAEpBS,OAAQ,CACJX,QAAS,OACTC,cAAe,MACfC,eAAgB,YAIlB4H,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZlH,EAAU0C,IAEhB,OACI,qBACI7B,UACe,UAAXqG,EACMlH,EAAQ4G,iBACR5G,EAAQ8G,sBAMxBK,EAAc,SAAC,GAAD,IAAGzB,EAAH,EAAGA,KAAH,OAChB,gCACI,oBAAIW,MAAO,CAAEC,UAAW,UAAxB,0BACA,+BACS,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QAAS,EACZD,EAAKlB,KAAI,SAAC9E,GAAD,OACL,8BACI,+BAAOA,EAAK0H,OACZ,sBAAMf,MAAO,CAAEgB,WAAY,IAA3B,SACK3H,EAAK4H,aAEV,sBAAMjB,MAAO,CAAEgB,WAAY,IAA3B,SAAkC3H,EAAK6H,iBAI/C,mBACIlB,MAAO,CACHC,UAAW,SACXzE,MAAO,OACP4B,WAAY,OACZN,UAAW,IALnB,mCAyIDqE,EA1HD,SAAC,GAAwC,IAAtC7C,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,SAAU6C,EAAmB,EAAnBA,aAC/B1F,QAAQC,IAAI,WAAY4C,GACxB,IAAM5E,EAAU0C,IAFkC,EAI1BzC,qBAJ0B,mBAI3CmC,EAJ2C,KAIrCsF,EAJqC,OAKZzH,qBALY,mBAK3C6E,EAL2C,KAK9BC,EAL8B,KAOlDS,qBAAU,WAWN,OAVAzD,QAAQC,IAAI,oBAAqB4C,GACjCD,EAAOc,GAAG,UAAU,SAACC,GACjBgC,EAAQhC,GACR3D,QAAQC,IAAI,SAAU0D,MAG1Bf,EAAOc,GAAG,eAAe,SAACC,GACtBX,EAAeW,MAGZ,WACHf,EAAOkB,IAAI,UACXlB,EAAOkB,IAAI,kBAEhB,IAUH,OACI,cAACjF,EAAA,EAAD,CAAWC,UAAWb,EAAQhB,KAA9B,SACI,eAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACH,UAAWb,EAAQ2G,QAAnC,UACI,eAAC5F,EAAA,EAAD,CAAMC,WAAS,EAACtB,MAAI,EAACwB,GAAI,GAAzB,UACI,cAACH,EAAA,EAAD,CACIrB,MAAI,EACJwB,GAAI,EACJmF,MAAO,CACHlH,QAAS,OACTE,eAAgB,cALxB,SAQI,qDAAiB+C,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMuF,UAE3B,cAAC5G,EAAA,EAAD,CACIrB,MAAI,EACJwB,GAAI,EACJmF,MAAO,CACHlH,QAAS,OACTE,eAAgB,WAChBC,WAAY,OANpB,SASI,cAACsC,EAAA,EAAD,CACIN,QAAQ,YACRO,MAAM,YACNC,QAAS,kBAAM2F,KAHnB,6BASR,eAAC1G,EAAA,EAAD,CAAMC,WAAS,EAACtB,MAAI,EAACwB,GAAI,GAAzB,UACI,cAACH,EAAA,EAAD,CAAMrB,MAAI,EAACkI,GAAI,GAAIjG,GAAI,IACvB,eAACZ,EAAA,EAAD,CAAMrB,MAAI,EAACkI,GAAI,GAAIjG,GAAI,EAAvB,UACI,qBAAKd,UAAWb,EAAQ+G,cAAxB,SACK3E,GACGA,EAAKyF,MAAMrD,KAAI,SAAC4C,GAAD,OACX,sBAEIf,MAAO,CACHlH,QAAS,OACTC,cAAe,MACfC,eAAgB,UALxB,UAQI,cAAC,EAAD,CAAY6H,OAAQE,EAAKF,SACzB,cAAC9F,EAAA,EAAD,CAAYiF,MAAO,CAAEQ,YAAa,IAAlC,SACKO,EAAKU,OAEV,cAAC1G,EAAA,EAAD,CACIiF,MAAO,CACH0B,UAAW,UAFnB,SAKKX,EAAKF,WAhBLE,EAAKY,eAqB1B,qBACI3B,MAAO,CACHlH,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChB8D,UAAW,IALnB,SAQI,cAACvB,EAAA,EAAD,CACIN,QAAQ,YACRO,MAAM,UACNC,QAAS,kBA9EjCC,QAAQC,IAAI,oBAAqB4C,EAAUE,QAC3CH,EAAO+B,KAAK,mBAAoB,CAC5BtE,KAAMwC,EACNwC,KAAMtC,KAwEU,UAKgB,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAamD,SAAU,aAAe,eAInD,cAAClH,EAAA,EAAD,CACIrB,MAAI,EACJkI,GAAI,GACJjG,GAAI,EACJd,UAAWb,EAAQkI,gBAJvB,SAMI,cAAC,EAAD,CAAaxC,KAAI,OAAEtD,QAAF,IAAEA,OAAF,EAAEA,EAAM+F,yBCzHlCC,EA3ED,WAAO,IAAD,EACwBnI,oBAAS,GADjC,mBACToI,EADS,KACMC,EADN,KAEV3D,EAAS4D,iBAAOC,IANT,gDAMmCC,QAC1C/H,EAAUC,cAHA,EAKkBV,oBAAS,GAL3B,mBAKTiF,EALS,KAKEC,EALF,OAMkBlF,mBAAS,IAN3B,mBAMTmF,EANS,UAQhBI,qBAAU,WAGN,IAAMkD,EAAehI,EAAQiI,SAASC,MAkBtC,OAjBA7G,QAAQC,IAAI0G,GAEZ/D,EAAO+B,KAAK,WAAYgC,GAExB/D,EAAOc,GAAG,SAAS,SAAChE,GAChBM,QAAQC,IAAI,QAASP,GACN,iBAAXA,EAAES,MACFxB,EAAQuB,KAAK,IAAK,CACd4G,MAAOpH,EAAEgF,SAOrB9B,EAAOc,GAAG,oBAAoB,kBAAM6C,GAAe,MAE5C,kBAAM3D,EAAOmE,gBACrB,IAEHtD,qBAAU,WACNzD,QAAQC,IAAI,WACZ2C,EAAO+B,KAAK,SAAUhG,EAAQiI,SAASC,MAAMxG,MAC7CuC,EAAO+B,KAAK,cAAehG,EAAQiI,SAASC,MAAMxG,QACnD,CAACiG,IAUJ,OACI,qCACI,cAACvC,EAAA,EAAD,CACIC,KAAMb,EACNc,iBAAkB,IAClBC,QAAS,kBAAMd,GAAa,IAC5Be,aAAc,CAAEC,WAAY,SAAUC,SAAU,OAJpD,SAMI,cAAC,IAAD,CAAOH,QAAS,kBAAMd,GAAa,IAAQG,SAAS,QAApD,SACKF,MAGRiD,GACG,cAAC,EAAD,CACI1D,OAAQA,EACRC,SAAUlE,EAAQiI,SAASC,MAAMxG,KACjCyC,iBAAkB,kBApB9ByD,GAAe,QACf3D,EAAO+B,KAAK,WAAYhG,EAAQiI,SAASC,MAAMxG,UAsBzCiG,GACE,cAAC,EAAD,CACI1D,OAAQA,EACRC,SAAUlE,EAAQiI,SAASC,MAAMxG,KACjCqF,aAAc,WA9B1B/G,EAAQuB,KAAK,YClCN8G,EAbA,kBACX,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC,EAAD,YCEDC,MATf,WACI,OACI,qCACI,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,QCIGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.d76bd466.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Typography,\n    Container,\n    makeStyles,\n    Paper,\n    Grid,\n    TextField,\n    Button,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    paper: {\n        width: '95%',\n        maxWidth: 1200,\n        padding: 50,\n    },\n    item: {\n        padding: 20,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'start',\n        alignItems: 'start',\n    },\n    inputGroup: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'start',\n        alignItems: 'center',\n    },\n    inputGroupCentered: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    label: {\n        padding: '0 10px',\n    },\n    button: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        padding: '30px 10px',\n    },\n});\n\nconst Home = () => {\n    const classes = useStyles();\n\n    const [userName, setUserName] = useState('');\n    const [existingRoomCode, setExistingRoomCode] = useState('');\n    const [newRoomCode, setNewRoomCode] = useState('');\n    const [level, setLevel] = useState(0);\n\n    const history = useHistory();\n\n    const requestJoin = () => {\n        console.log(userName);\n        console.log(existingRoomCode);\n\n        history.push('/game/', {\n            type: 'join',\n            username: userName,\n            room: existingRoomCode,\n        });\n    };\n    const requestCreate = () => {\n        console.log(userName);\n        console.log(newRoomCode);\n        console.log(level);\n        history.push('/game/', {\n            type: 'create',\n            username: userName,\n            room: newRoomCode,\n            level,\n        });\n    };\n\n    return (\n        <Container className={classes.root}>\n            <Paper className={classes.paper}>\n                <Grid container spacing={3}>\n                    <Grid className={classes.item} item xs={12}>\n                        <div\n                            className={classes.inputGroupCentered}\n                            component='div'\n                        >\n                            <Typography className={classes.label}>\n                                User Name :\n                            </Typography>\n                            <TextField\n                                variant='outlined'\n                                value={userName}\n                                onChange={(e) => setUserName(e.target.value)}\n                            />\n                        </div>\n                    </Grid>\n\n                    <Grid className={classes.item} item xs={12} md={6}>\n                        <div className={classes.inputGroup} component='div'>\n                            <Typography className={classes.label}>\n                                Existing Room Code :\n                            </Typography>\n                            <TextField\n                                variant='outlined'\n                                value={existingRoomCode}\n                                onChange={(e) =>\n                                    setExistingRoomCode(e.target.value)\n                                }\n                            />\n                        </div>\n                        <div className={classes.button}>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                onClick={() => requestJoin()}\n                            >\n                                Join\n                            </Button>\n                        </div>\n                    </Grid>\n                    <Grid className={classes.item} item xs={12} md={6}>\n                        <div className={classes.inputGroup} component='div'>\n                            <Typography className={classes.label}>\n                                New Room Code :\n                            </Typography>\n                            <TextField\n                                variant='outlined'\n                                value={newRoomCode}\n                                onChange={(e) => setNewRoomCode(e.target.value)}\n                            />\n                        </div>\n                        <div className={classes.inputGroup} component='div'>\n                            <Typography className={classes.label}>\n                                Level :\n                            </Typography>\n                            <RadioGroup\n                                value={level}\n                                onChange={(e) =>\n                                    setLevel(parseInt(e.target.value, 10))\n                                }\n                            >\n                                <FormControlLabel\n                                    value={0}\n                                    control={<Radio />}\n                                    label='easy'\n                                />\n                                <FormControlLabel\n                                    value={1}\n                                    control={<Radio />}\n                                    label='medium'\n                                />\n                                <FormControlLabel\n                                    value={2}\n                                    control={<Radio />}\n                                    label='hard'\n                                />\n                            </RadioGroup>\n                        </div>\n                        <div className={classes.button}>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                onClick={() => requestCreate()}\n                            >\n                                Create\n                            </Button>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Container>\n    );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Container,\n    FormControlLabel,\n    Grid,\n    makeStyles,\n    Paper,\n    Radio,\n    RadioGroup,\n    Typography,\n    Snackbar,\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyle = makeStyles({\n    root: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    card: {\n        width: 200,\n        height: 200,\n        cursor: 'pointer',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 20,\n    },\n    selectedCard: {\n        width: 200,\n        height: 200,\n        cursor: 'pointer',\n        boxShadow: '19px 24px 23px rgba(40, 152, 234, 0.25)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 20,\n    },\n    greenCard: {\n        width: 200,\n        height: 200,\n        cursor: 'pointer',\n        backgroundColor: '#46A661',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 20,\n    },\n    gridContainer: {\n        width: '100%',\n        height: '97%',\n        marginTop: '3%',\n    },\n    cardContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    },\n    paper: {\n        width: '100%',\n        height: '100%',\n        maxWidth: 900,\n        maxHeight: 700,\n    },\n    paperTextWhite: {\n        color: '#fff',\n        fontSize: 20,\n        fontWeight: 600,\n    },\n    paperTextBlack: {\n        color: '#000',\n        fontSize: 20,\n        fontWeight: 600,\n    },\n    selectedRadioButton: {\n        backgroundColor: '#1D54E1',\n        margin: 2,\n        borderRadius: 7,\n        boxShadow: '7px 7px 32px 4px rgba(0, 0, 0, 0.25)',\n        '&:hover': {\n            backgroundColor: '#597acc',\n        },\n    },\n    unSelectedRadioButton: {\n        backgroundColor: '#090808',\n        margin: 2,\n        borderRadius: 7,\n        '&:hover': {\n            backgroundColor: '#595959',\n        },\n    },\n    radioButtonText: {\n        color: '#fff',\n    },\n    bottomContainer: {\n        marginTop: 30,\n    },\n    leaveButtonGrid: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n});\n\nconst Alert = (props) => <MuiAlert elevation={6} variant='filled' {...props} />;\n\nconst RevealCard = ({ value, onClick, isSelected }) => {\n    const classes = useStyle();\n\n    return (\n        <Paper\n            className={\n                // eslint-disable-next-line no-nested-ternary\n                value !== '?'\n                    ? classes.greenCard\n                    : isSelected\n                    ? classes.selectedCard\n                    : classes.card\n            }\n            onClick={onClick}\n        >\n            <Typography\n                className={\n                    value !== '?'\n                        ? classes.paperTextWhite\n                        : classes.paperTextBlack\n                }\n            >\n                {value}\n            </Typography>\n        </Paper>\n    );\n};\n\nconst CustomRadioButtons = ({ dataList, value, onChange }) => {\n    const classes = useStyle();\n\n    return (\n        <div>\n            {dataList?.map((item, index) => (\n                <Button\n                    className={\n                        index + 1 === value\n                            ? classes.selectedRadioButton\n                            : classes.unSelectedRadioButton\n                    }\n                    onClick={() => onChange(index + 1)}\n                >\n                    <Typography className={classes.radioButtonText}>\n                        {index + 1}\n                    </Typography>\n                </Button>\n            ))}\n        </div>\n    );\n};\n\nconst Game = ({ socket, roomCode, requestLeaveGame }) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [selectedCard, setSelectedCard] = useState(0);\n    const [value, setValue] = useState(1);\n    const [openToast, setOpenToast] = useState(false);\n\n    const [errorText, setErrorText] = useState('');\n    const [severity, setSeverity] = useState('error');\n\n    useEffect(() => {\n        socket.on('currentUser', (data) => {\n            console.log('current User', data);\n            setCurrentUser(data);\n            if (data.log.length > 0) {\n                if (data.log[data.log.length - 1].result === 0) {\n                    setErrorText('Hurray! You got it right');\n                    setSeverity('success');\n                } else {\n                    setErrorText(\n                        `Sorry! Card ${\n                            data.log[data.log.length - 1].value\n                        } is in ${\n                            data.log[data.log.length - 1].result === 1\n                                ? 'right'\n                                : 'left'\n                        } of the current card`\n                    );\n                    setSeverity('error');\n                }\n                setOpenToast(true);\n            }\n        });\n\n        return () => {\n            socket.off('currentUser');\n        };\n    }, []);\n\n    const classes = useStyle();\n\n    const giveCardCount = (n) => {\n        if (n === 0) return 3;\n        return 5;\n    };\n\n    const requestGuess = () => {\n        socket.emit('move', { room: roomCode, index: selectedCard, value });\n    };\n\n    return (\n        <Container className={classes.root}>\n            <Snackbar\n                open={openToast}\n                autoHideDuration={6000}\n                onClose={() => setOpenToast(false)}\n                anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n            >\n                <Alert onClose={() => setOpenToast(false)} severity={severity}>\n                    {errorText}\n                </Alert>\n            </Snackbar>\n            <Grid container className={classes.gridContainer}>\n                <Grid item xs={12}>\n                    <Typography style={{ textAlign: 'end' }}>\n                        Remianing Moves: {currentUser?.remainingMove}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} className={classes.cardContainer}>\n                    {currentUser?.answer.map((item, index) => (\n                        <RevealCard\n                            // eslint-disable-next-line react/no-array-index-key\n                            key={index}\n                            value={item}\n                            onClick={() => setSelectedCard(index)}\n                            isSelected={index === selectedCard}\n                        />\n                    ))}\n                </Grid>\n                <Grid\n                    container\n                    item\n                    xs={12}\n                    className={classes.bottomContainer}\n                >\n                    <Grid item xs={12} md={4}>\n                        <Typography>\n                            Select the value for card {selectedCard + 1}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <CustomRadioButtons\n                            dataList={currentUser?.answer}\n                            value={value}\n                            onChange={(val) => setValue(val)}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            onClick={() => requestGuess()}\n                        >\n                            Guess\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} className={classes.leaveButtonGrid}>\n                    <Button\n                        variant='contained'\n                        color='secondary'\n                        onClick={() => requestLeaveGame()}\n                    >\n                        Leave\n                    </Button>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default Game;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Container,\n    Grid,\n    makeStyles,\n    Typography,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles({\n    root: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    content: {\n        width: '90%',\n        height: '90%',\n    },\n    activeStatusIcon: {\n        width: 12,\n        height: 12,\n        borderRadius: '50%',\n        backgroundColor: 'green',\n        marginRight: 10,\n    },\n    inActiveStatusIcon: {\n        width: 12,\n        height: 12,\n        borderRadius: '50%',\n        backgroundColor: 'red',\n        marginRight: 10,\n    },\n    userContainer: {},\n    userItem: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n    button: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n});\n\nconst StatusIcon = ({ status }) => {\n    const classes = useStyle();\n\n    return (\n        <div\n            className={\n                status === 'ready'\n                    ? classes.activeStatusIcon\n                    : classes.inActiveStatusIcon\n            }\n        />\n    );\n};\n\nconst Leaderboard = ({ data }) => (\n    <div>\n        <h3 style={{ textAlign: 'center' }}>Leader Board</h3>\n        <div>\n            {data?.length > 0 ? (\n                data.map((item) => (\n                    <p>\n                        <span>{item.user}</span>\n                        <span style={{ marginLeft: 20 }}>\n                            {item.bestReveal}\n                        </span>\n                        <span style={{ marginLeft: 20 }}>{item.bestMove}</span>\n                    </p>\n                ))\n            ) : (\n                <p\n                    style={{\n                        textAlign: 'center',\n                        color: 'gray',\n                        fontWeight: 'bold',\n                        marginTop: 40,\n                    }}\n                >\n                    Nothing to show\n                </p>\n            )}\n        </div>\n    </div>\n);\n\nconst Lobby = ({ socket, roomCode, requestLeave }) => {\n    console.log('roomcode', roomCode);\n    const classes = useStyle();\n\n    const [room, setRoom] = useState();\n    const [currentUser, setCurrentUser] = useState();\n\n    useEffect(() => {\n        console.log('use effect called', roomCode);\n        socket.on('update', (data) => {\n            setRoom(data);\n            console.log('update', data);\n        });\n\n        socket.on('currentUser', (data) => {\n            setCurrentUser(data);\n        });\n\n        return () => {\n            socket.off('update');\n            socket.off('currentUser');\n        };\n    }, []);\n\n    const startGame = () => {\n        console.log('Start Game called', roomCode, currentUser);\n        socket.emit('readytoStartGame', {\n            room: roomCode,\n            user: currentUser,\n        });\n    };\n\n    return (\n        <Container className={classes.root}>\n            <Grid container className={classes.content}>\n                <Grid container item xs={12}>\n                    <Grid\n                        item\n                        xs={6}\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-start',\n                        }}\n                    >\n                        <h2>Room Code : {room?.code}</h2>\n                    </Grid>\n                    <Grid\n                        item\n                        xs={6}\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                            alignItems: 'end',\n                        }}\n                    >\n                        <Button\n                            variant='contained'\n                            color='secondary'\n                            onClick={() => requestLeave()}\n                        >\n                            Leave Room\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid container item xs={12}>\n                    <Grid item sm={12} md={4} />\n                    <Grid item sm={12} md={4}>\n                        <div className={classes.userContainer}>\n                            {room &&\n                                room.users.map((user) => (\n                                    <div\n                                        key={user.socketId}\n                                        style={{\n                                            display: 'flex',\n                                            flexDirection: 'row',\n                                            justifyContent: 'center',\n                                        }}\n                                    >\n                                        <StatusIcon status={user.status} />\n                                        <Typography style={{ marginRight: 40 }}>\n                                            {user.name}\n                                        </Typography>\n                                        <Typography\n                                            style={{\n                                                fontStyle: 'italic',\n                                            }}\n                                        >\n                                            {user.status}\n                                        </Typography>\n                                    </div>\n                                ))}\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'row',\n                                justifyContent: 'center',\n                                marginTop: 30,\n                            }}\n                        >\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                onClick={() => startGame()}\n                            >\n                                {currentUser?.isAdmin ? 'Start Game' : 'Ready'}\n                            </Button>\n                        </div>\n                    </Grid>\n                    <Grid\n                        item\n                        sm={12}\n                        md={4}\n                        className={classes.leaderboardGrid}\n                    >\n                        <Leaderboard data={room?.leaderboard} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\nexport default Lobby;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport socketIOClient from 'socket.io-client';\nimport { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Game from '../component/game.component';\nimport Lobby from '../component/lobby.component';\n\nconst ENDPOINT = 'https://serene-plateau-46910.herokuapp.com/';\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst Entry = () => {\n    const [isGameStarted, setGameStarted] = useState(false);\n    const socket = useRef(socketIOClient(ENDPOINT)).current;\n    const history = useHistory();\n\n    const [openToast, setOpenToast] = useState(false);\n    const [errorText, setErrorText] = useState('');\n\n    useEffect(() => {\n        // if (history.location.state === undefined) history.replace('/');\n\n        const historyState = history.location.state;\n        console.log(historyState);\n\n        socket.emit('joinRoom', historyState);\n\n        socket.on('error', (e) => {\n            console.log('error', e);\n            if (e.type === 'sessionError')\n                history.push('/', {\n                    error: e.val,\n                });\n\n            // setErrorText(e.value);\n            // setOpenToast(true);\n        });\n\n        socket.on('readytoStartGame', () => setGameStarted(true));\n\n        return () => socket.disconnect();\n    }, []);\n\n    useEffect(() => {\n        console.log('emitted');\n        socket.emit('update', history.location.state.room);\n        socket.emit('currentUser', history.location.state.room);\n    }, [isGameStarted]);\n\n    const handleLeave = () => {\n        history.push('/');\n    };\n    const handleLeaveGame = () => {\n        setGameStarted(false);\n        socket.emit('exitGame', history.location.state.room);\n    };\n\n    return (\n        <>\n            <Snackbar\n                open={openToast}\n                autoHideDuration={6000}\n                onClose={() => setOpenToast(false)}\n                anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\n            >\n                <Alert onClose={() => setOpenToast(false)} severity='error'>\n                    {errorText}\n                </Alert>\n            </Snackbar>\n            {isGameStarted && (\n                <Game\n                    socket={socket}\n                    roomCode={history.location.state.room}\n                    requestLeaveGame={() => handleLeaveGame()}\n                />\n            )}\n            {!isGameStarted && (\n                <Lobby\n                    socket={socket}\n                    roomCode={history.location.state.room}\n                    requestLeave={() => handleLeave()}\n                />\n            )}\n        </>\n    );\n};\nexport default Entry;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Entry, Home } from './pages';\n\nconst Routes = () => (\n    <Router>\n        <Switch>\n            <Route exact path='/'>\n                <Home />\n            </Route>\n            <Route exact path='/game'>\n                <Entry />\n            </Route>\n        </Switch>\n    </Router>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <>\n            <CssBaseline />\n            <Routes />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}